#ifndef __JM_PUBLIC_H__
#define __JM_PUBLIC_H__

#include "def.h"

#define MAP_WIDTH (24)
#define MAP_HEIGHT (24)

#define S_AIR 0x01
#define S_WALL_BLUE (0x10)
#define S_WALL_RED (0x20)
#define S_WALL_GREEN (0x30)

#define S_CAN_PASSTHROUGH(v) (((v) & 0x01) == 1)
#define S_GET_ID(v) ((v) >> 4)

typedef struct WorldMap
{
    I32** data;
    I32 width;
    I32 height;
} WorldMap;

static const I32 worldMap[MAP_WIDTH][MAP_HEIGHT] =
{
    { S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_WALL_GREEN, S_WALL_GREEN, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_GREEN, S_WALL_GREEN, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_WALL_GREEN, S_WALL_GREEN, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_GREEN, S_WALL_GREEN, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_AIR, S_WALL_BLUE },
    { S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE, S_WALL_BLUE }
};


WorldMap* readMapFromFile(const I8* file);

#endif